generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ==================== MODELOS PRINCIPALES ====================

model Programa {
  id         String       @id @default(cuid())
  nombre     String       @unique
  codigo     String       @unique
  color      String
  colorBrillo String
  colorTexto String
  creadoEn   DateTime     @default(now())
  actualizadoEn DateTime
  asignaturas Asignatura[]

  @@index([codigo])
  @@map("programas") // Nombre real de la tabla en la base de datos
}

model Asignatura {
  id          String       @id @default(cuid())
  nombre      String
  codigo      String       @unique
  programaId  String
  semestre    Int?
  creditos    Int?
  activa      Boolean      @default(true)
  creadoEn    DateTime     @default(now())
  actualizadoEn DateTime
  asistencias Asistencia[]
  horarios    Horario[]
  programa    Programa     @relation(fields: [programaId], references: [id], onDelete: Cascade)

  @@index([codigo])
  @@index([activa])
  @@index([programaId])
  @@map("asignaturas")
}

model Aula {
  id          String       @id @default(cuid())
  nombre      String       @unique
  capacidad   Int?
  edificio    String?
  piso        String?
  equipos     Json?
  activa      Boolean      @default(true)
  creadoEn    DateTime     @default(now())
  actualizadoEn DateTime
  asistencias Asistencia[]
  estados     EstadoAula[]
  horarios    Horario[]

  @@index([activa])
  @@index([nombre])
  @@map("aulas")
}

model Profesor {
  id          String       @id @default(cuid())
  nombre      String
  correo      String       @unique
  telefono    String?
  activo      Boolean      @default(true)
  creadoEn    DateTime     @default(now())
  actualizadoEn DateTime
  asistencias Asistencia[]
  horarios    Horario[]

  @@index([correo])
  @@index([activo])
  @@map("profesores")
}

model Horario {
  id          String       @id @default(cuid())
  diaSemana   Int
  horaInicio  String
  horaFin     String
  semestre    String
  grupo       String?
  activo      Boolean      @default(true)
  asignaturaId String
  aulaId      String
  profesorId  String?
  cantidadSt  Int?
  creadoEn    DateTime     @default(now())
  actualizadoEn DateTime
  asistencias Asistencia[]
  profesor    Profesor?    @relation(fields: [profesorId], references: [id])
  aula        Aula         @relation(fields: [aulaId], references: [id], onDelete: Cascade)
  asignatura  Asignatura   @relation(fields: [asignaturaId], references: [id], onDelete: Cascade)

  @@unique([diaSemana, horaInicio, horaFin, aulaId, semestre])
  @@index([diaSemana, semestre])
  @@index([activo])
  @@index([aulaId, diaSemana])
  @@index([asignaturaId])
  @@map("horarios")
}

model Asistencia {
  id           String           @id @default(cuid())
  fecha        DateTime
  horaInicio   String
  horaFin      String
  estado       EstadoAsistencia
  observaciones String?
  verificadoPor String?
  horarioId    String
  asignaturaId String
  cantasistida Int?
  aulaId       String
  profesorId   String?
  creadoEn     DateTime         @default(now())
  actualizadoEn DateTime
  profesor     Profesor?        @relation(fields: [profesorId], references: [id])
  aula         Aula             @relation(fields: [aulaId], references: [id], onDelete: Cascade)
  horario      Horario          @relation(fields: [horarioId], references: [id], onDelete: Cascade)
  asignatura   Asignatura       @relation(fields: [asignaturaId], references: [id], onDelete: Cascade)

  @@unique([horarioId, fecha])
  @@index([fecha])
  @@index([aulaId, fecha])
  @@index([estado])
  @@map("asistencias")
}

model EstadoAula {
  id          String    @id @default(cuid())
  aulaId      String
  fecha       DateTime
  franja      String
  abierta     Boolean   @default(false)
  horaApertura DateTime?
  horaCierre   DateTime?
  abiertoPor   String?
  cerradoPor   String?
  notas        String?
  creadoEn     DateTime  @default(now())
  actualizadoEn DateTime
  aula         Aula      @relation(fields: [aulaId], references: [id], onDelete: Cascade)

  @@unique([aulaId, fecha, franja])
  @@index([fecha])
  @@index([abierta])
  @@index([aulaId, fecha])
  @@map("estado_aula")
}

model RegistroSistema {
  id           String   @id @default(cuid())
  accion       String
  tipoEntidad  String
  entidadId    String
  usuarioId    String?
  detalles     Json?
  fechaHora    DateTime @default(now())

  @@index([accion])
  @@index([tipoEntidad, entidadId])
  @@index([fechaHora])
  @@map("registros_sistema")
}

// ==================== ENUMERACIONES ====================

enum EstadoAsistencia {
  ASISTIO
  NO_ASISTIO
  TARDANZA
  JUSTIFICADA
  CANCELADA
}
